-- phpMyAdmin SQL Dump
-- version 3.5.7
-- http://www.phpmyadmin.net
--
-- Servidor: localhost
-- Tiempo de generación: 04-03-2013 a las 17:24:53
-- Versión del servidor: 5.5.24-log
-- Versión de PHP: 5.4.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Base de datos: `curricula`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `areas`
--

CREATE TABLE IF NOT EXISTS `areas` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `abbreviation` varchar(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=5 ;

--
-- Volcado de datos para la tabla `areas`
--

INSERT INTO `areas` (`id`, `name`, `abbreviation`) VALUES
(1, 'Ãrea de Ciencia de la ComputaciÃ³n (Computer Science)', 'CS'),
(2, 'Ãrea de FormaciÃ³n General', 'FG'),
(3, 'Ãrea de FormaciÃ³n de Empresas de Base TecnolÃ³gica', 'ET'),
(4, 'Ãrea de Ciencias BÃ¡sicas (MatemÃ¡tica y FÃ­sica)', 'CB');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `axes`
--

CREATE TABLE IF NOT EXISTS `axes` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `code` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10 ;

--
-- Volcado de datos para la tabla `axes`
--

INSERT INTO `axes` (`id`, `name`, `code`) VALUES
(1, 'Hardware y Arquitectura', 0),
(2, 'Ciencia de la ComputaciÃ³n', 1),
(3, 'IngenierÃ­a de Software', 2),
(4, 'Sistemas de InformaciÃ³n', 3),
(5, 'TecnologÃ­a de InformaciÃ³n', 4),
(6, 'Contenido Empresarial', 5),
(7, 'MatemÃ¡tica para ComputaciÃ³n', 6),
(8, 'Ciencias BÃ¡sicas', 7),
(9, 'FormaciÃ³n General', 8);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `axes_courses`
--

CREATE TABLE IF NOT EXISTS `axes_courses` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `axis_id` int(10) unsigned NOT NULL,
  `course_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=117 ;

--
-- Volcado de datos para la tabla `axes_courses`
--

INSERT INTO `axes_courses` (`id`, `axis_id`, `course_id`) VALUES
(11, 1, 23),
(12, 3, 23),
(20, 7, 21),
(21, 7, 23),
(113, 4, 72),
(114, 8, 72),
(115, 2, 73),
(116, 5, 73);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `brw_files`
--

CREATE TABLE IF NOT EXISTS `brw_files` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `record_id` int(10) unsigned NOT NULL,
  `model` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `category_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `category_code` (`category_code`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `brw_images`
--

CREATE TABLE IF NOT EXISTS `brw_images` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `record_id` int(10) unsigned NOT NULL,
  `model` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `category_code` char(10) COLLATE utf8_unicode_ci NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `category_code` (`category_code`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `brw_users`
--

CREATE TABLE IF NOT EXISTS `brw_users` (
  `id` int(5) unsigned NOT NULL AUTO_INCREMENT,
  `email` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `root` tinyint(1) NOT NULL DEFAULT '1',
  `last_login` datetime NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`email`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `courses`
--

CREATE TABLE IF NOT EXISTS `courses` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `justification` text NOT NULL,
  `code` varchar(20) NOT NULL,
  `credits` int(11) DEFAULT NULL,
  `identifying_number` int(11) DEFAULT NULL,
  `area_id` int(11) NOT NULL,
  `level_id` int(11) NOT NULL,
  `subject_id` int(11) NOT NULL,
  `type_id` int(11) NOT NULL,
  `implementation_strategy_id` int(11) NOT NULL,
  `semester` int(11) NOT NULL,
  `theory_hours` double DEFAULT NULL,
  `practice_hours` double DEFAULT NULL,
  `lab_hours` double DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=77 ;

--
-- Volcado de datos para la tabla `courses`
--

INSERT INTO `courses` (`id`, `name`, `justification`, `code`, `credits`, `identifying_number`, `area_id`, `level_id`, `subject_id`, `type_id`, `implementation_strategy_id`, `semester`, `theory_hours`, `practice_hours`, `lab_hours`, `created`, `modified`, `user_id`) VALUES
(21, 'IntroducciÃ³n a la ProgramaciÃ³n', 'Este es el primer curso en la secuencia de los cursos introductorios a la informÃ¡tica. En este curso se pretende cubrir los conceptos seÃ±alados por la Computing Curricula IEEE-CS/ACM 2008, bajo el enfoque functional-first.\r\n\r\nLa programaciÃ³n es uno de los pilares de la informÃ¡tica; cualquier profesional del Ã¡rea, necesitarÃ¡ programar para concretizar sus modelos y propuestas.\r\n\r\nEste curso introducirÃ¡ a los participantes en los conceptos fundamentales de este arte. Lo tÃ³picos incluyen tipos de datos, estructuras de control, funciones, listas, recursividad y la mecÃ¡nica de la ejecuciÃ³n, prueba y depuraciÃ³n.\r\n\r\nEl curso tambiÃ©n ofrecerÃ¡ una introducciÃ³n al contexto histÃ³rico y social de la informÃ¡tica y una revisiÃ³n del Ã¡mbito de esta disciplina.', 'CS101F', 4, 1, 1, 1, 1, 1, 3, 1, 2, 2, 2, '2013-02-28 16:01:40', '2013-03-04 16:58:34', 7),
(23, 'Estructuras Discretas I', 'Las estructuras discretas son fundamentales para la ciencia de la computaciÃ³n. Es evidente que las estructuras discretas son usadas en las Ã¡reas de estructura de datos y algoritmos , sin embargo son tambiÃ©n importantes en otras, como por ejemplo en la verificaciÃ³n, en criptografÃ­a y mÃ©todos formales.', 'CS105A', 4, 5, 1, 1, 1, 1, 5, 1, 2, 2, 0, '2013-02-28 16:14:41', '2013-03-03 18:09:11', 7),
(24, 'Ãlgebra y GeometrÃ­a', 'Curso introductorio, soporte de los posteriores cursos de AnÃ¡lisis MatemÃ¡tico, estudia el plano y el espacio, haciendo Ã©nfasis es su aspecto vectorial y su interpretaciÃ³n geomÃ©trica, lo que permite visualizar conceptos que posteriormente se verÃ¡n en forma abstracta.', 'CB101', 5, 1, 4, 1, 1, 1, 0, 1, 4, 2, 0, '2013-02-28 16:16:30', '2013-03-04 16:59:36', 7),
(25, 'IntroducciÃ³n a la Vida Universitaria', 'El alumno inicia una nueva etapa en su crecimiento personal en bÃºsqueda de una formaciÃ³n profesional que le permita desenvolverse en el mundo. Para responder a sus expectativas es necesario acompaÃ±arlo a descubrir sus anhelos existenciales, de manera que no sÃ³lo se forme en lo acadÃ©mico e intelectual sino que ademÃ¡s comprenda y trabaje por formarse como un ser humano integral. Esto implica ayudarlo a que lleve adelante una profundizaciÃ³n en los temas fundamentales de su conocimiento personal, de la antropologÃ­a del ser humano y de su participaciÃ³n en el medio social, de manera particular en la vida universitaria. Su realizaciÃ³n como buen profesional depende de una buena formaciÃ³n personal y cultural que le brinde horizontes amplios, que sustenten y proyecten su conocimiento y quehacer tÃ©cnicos e intelectuales y que le permitan contribuir a la evangelizaciÃ³n de la cultura y al cambio cultural.', 'FG103', 3, 3, 2, 1, 1, 1, 0, 1, 3, 0, 0, '2013-02-28 16:19:30', '2013-03-04 17:00:03', 7),
(71, 'ssd', 'dsffsd', 'CS103', 7, 3, 1, 1, 1, 1, 0, 7, 7, 7, 3, '2013-03-04 03:27:46', '2013-03-04 03:27:46', 3),
(72, 'Pepe', 'Pancho', 'CS103', 7, 3, 1, 1, 1, 1, 0, 7, 7, 7, 7, '2013-03-04 03:29:50', '2013-03-04 04:22:26', 3),
(73, 'IntroducciÃ³n a Internet', 'El desarrollo de software para la Internet sea convertido en una necesidad primordial para los que trabajan en el mundo informÃ¡tico.\r\n\r\nEste tipo de software plantea nuevos retos: temas como seguridad, modelos cliente servidor, programaciÃ³n de sistemas, etc. y en la actualidad son piezas clave a tener en cuenta.\r\n\r\nEl curso darÃ¡ una revisiÃ³n bÃ¡sica a las tÃ©cnicas y herramientas usadas en este tipo de ambientes.', 'CS100', 3, 0, 1, 1, 1, 1, 0, 3, 2, 0, 2, '2013-03-04 14:55:38', '2013-03-04 14:55:38', 3),
(74, 'ApreciaciÃ³n de la MÃºsica', 'El egresado de la Universidad San Pablo, no sÃ³lo deberÃ¡ ser un excelente profesional, conocedor de la mÃ¡s avanzada tecnologÃ­a, sino tambiÃ©n, un ser humano sensible y de amplia cultura. En esta perspectiva, el curso proporciona los instrumentos conceptuales bÃ¡sicos para una Ã³ptima comprensiÃ³n de las obras musicales como producto cultural y artÃ­stico creado por el hombre.', 'FG105', 2, 5, 2, 1, 1, 2, 0, 2, 1, 2, 0, '2013-03-04 15:28:46', '2013-03-04 17:01:08', 7),
(75, 'Teatro', 'Favorece al estudiante a identificarse a la "Comunidad AcadÃ©mica" de la Universidad, en la medida en que le brinda canales naturales de integraciÃ³n a su grupo y a su Centro de Estudios y le permite, desde una visiÃ³n alternativa, visualizar la valÃ­a interior de las personas a su alrededor, a la vez que puede conocer mejor la suya propia. Relaciona al universitario, a travÃ©s de la experimentaciÃ³n, con un nuevo lenguaje, un medio de comunicaciÃ³n y expresiÃ³n que va mÃ¡s allÃ¡ de la expresiÃ³n verbal conceptualizada. Coadyuva al estudiante en su formaciÃ³n integral, desarrollando en Ã©l capacidades corporales. Estimula en Ã©l, actitudes anÃ­micas positivas, aptitudes cognitivas y afectivas. Enriquece su sensibilidad y despierta su solidaridad. Desinhibe y socializa, relaja y alegra, abriendo un camino de apertura de conocimiento del propio ser y el ser de los demÃ¡s.', 'FG106', 2, 6, 2, 1, 1, 2, 0, 2, 1, 2, 0, '2013-03-04 15:31:23', '2013-03-04 17:01:28', 7),
(76, 'TÃ³picos en ComputaciÃ³n GrÃ¡fica', 'En este curso se puede profundizar en alguno de los tÃ³picos mencionados en el Ã¡rea de ComputaciÃ³n GrÃ¡fica (Graphics and Visual Computing - GV).\r\n\r\nÃ‰ste curso estÃ¡ destinado a realizar algun curso avanzado sugerido por la curricula de la ACM/IEEE.', 'CS355', 4, 5, 1, 3, 6, 2, 0, 9, 2, 2, 2, '2013-03-04 15:33:33', '2013-03-04 17:02:04', 7);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `courses_programs`
--

CREATE TABLE IF NOT EXISTS `courses_programs` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `course_id` int(10) unsigned NOT NULL,
  `program_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;

--
-- Volcado de datos para la tabla `courses_programs`
--

INSERT INTO `courses_programs` (`id`, `course_id`, `program_id`) VALUES
(1, 3, 1),
(2, 4, 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `implementation_strategies`
--

CREATE TABLE IF NOT EXISTS `implementation_strategies` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `code` varchar(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;

--
-- Volcado de datos para la tabla `implementation_strategies`
--

INSERT INTO `implementation_strategies` (`id`, `name`, `code`) VALUES
(0, 'None', ''),
(1, 'Imperative-first', 'I'),
(2, 'Objects-first', 'O'),
(3, 'Functional-first', 'F'),
(4, 'Breadth-first', 'B'),
(5, 'Algorithms-first', 'A'),
(6, 'Hardware-first', 'H'),
(7, 'Traditional discrete-topic approach', 'T'),
(8, 'Compressed approach', 'C'),
(9, 'Systems-based approach', 'S'),
(10, 'Web-based approach', 'W');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `levels`
--

CREATE TABLE IF NOT EXISTS `levels` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `numeric_representation` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=5 ;

--
-- Volcado de datos para la tabla `levels`
--

INSERT INTO `levels` (`id`, `name`, `numeric_representation`) VALUES
(1, 'Introductory', 1),
(2, 'Intermediate', 2),
(3, 'Advanced', 3),
(4, 'Project', 4);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `objectives`
--

CREATE TABLE IF NOT EXISTS `objectives` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `description` tinytext NOT NULL,
  `course_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=74 ;

--
-- Volcado de datos para la tabla `objectives`
--

INSERT INTO `objectives` (`id`, `description`, `course_id`) VALUES
(1, 'Desarrollar Operaciones asociadas con conjuntos, funciones y relaciones.', 23),
(2, 'Relacionar ejemplos prÃ¡cticos al modelo apropiado de conjunto, funciÃ³n o relaciÃ³n.', 23),
(4, 'Conocer las diferentes tÃ©cnicas de conteo mÃ¡s utilizadas.', 23),
(5, 'Describir como las herramientas formales de lÃ³gica simbÃ³lica son utilizadas.', 23),
(6, 'Describir la importancia y limitaciones de la lÃ³gica de predicados.', 23),
(7, 'Bosquejar la estructura bÃ¡sica y dar ejemplos de cada tipo de prueba descrita en esta unidad.', 23),
(8, 'Relacionar las ideas de inducciÃ³n matemÃ¡tica con la recursividad y con estructuras definidas recursivamente.', 23),
(9, 'Enunciar, identificar y habituarse a los conceptos mÃ¡s importantes de Conjuntos Parcialmente Ordenados y LÃ¡tices', 23),
(10, 'Analizar, comentar y aceptar las nociones bÃ¡sicas de Ãlgebras Booleanas.', 23),
(12, 'Introducir los conceptos fundamentales de programaciÃ³n y estructuras de datos utilizando un lenguaje funcional.', 21),
(13, 'dsdsdsd', 70),
(14, 'Uno', 71),
(15, 'Dos', 71),
(16, 'Tres', 71),
(57, 'Uno uno', 72),
(58, 'Dos uno', 72),
(59, 'Uno dos', 72),
(60, 'Dos corregido de nuevo', 72),
(61, 'Totalmente nuevo', 72),
(62, 'Introducir a los estudiantes a los protocolos de internet.', 73),
(63, 'Introducir a los estudiantes en el mundo del desarrollo de software para la web', 73),
(64, 'Desarrollar su capacidad de abstracciÃ³n, utilizar un lenguaje de programaciÃ³n funcional.', 21),
(65, 'Familiarizarse y manejar las matrices, determinantes y sus relaciones con los sistemas de ecuaciones y aplicaciones.', 24),
(66, 'Establecer relaciones lineales y cuadrÃ¡ticas en el plano y en el espacio.', 24),
(67, 'Relacionar el Ã¡lgebra con la geometrÃ­a, de modo que visualice problemas que de otro modo serÃ­an abstractos.', 24),
(68, 'Que el alumno logre mediante su inserciÃ³n en la vida universitaria una disposiciÃ³n de apertura a su propio mundo interior y a su misiÃ³n en el mundo, de cara a cuestionarse a si mismo para lograr un crecimiento personal que permita su despliegue integra', 25),
(69, 'Analizar de manera crÃ­tica las diferentes manifestaciones artÃ­sticas a travÃ©s de la historia identificando su naturaleza expresiva, compositiva y caracterÃ­sticas estÃ©ticas asÃ­ como las nuevas tendencias artÃ­sticas identificando su relaciÃ³n directa', 74),
(70, 'Contribuir a la formaciÃ³n personal y profesional del estudiante, reconociendo, valorando y desarrollando su lenguaje corporal, integrÃ¡ndolo a su grupo, afianzando su seguridad personal, enriqueciendo su intuiciÃ³n, su imaginaciÃ³n y creatividad, motivÃ¡', 75),
(71, 'Que el alumno utilice tÃ©cnicas de computaciÃ³n grÃ¡fica mÃ¡s sofisticadas que involucren estructuras de datos y algoritmos complejos.', 76),
(72, 'Que el alumno aplique los conceptos aprendidos para crear una aplicaciÃ³n sobre un problema real.', 76),
(73, 'Que el alumno investigue la posibilidad de crear un nuevo algoritmo y/o tÃ©cnica nueva para resolver un problema real.', 76);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `programs`
--

CREATE TABLE IF NOT EXISTS `programs` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Volcado de datos para la tabla `programs`
--

INSERT INTO `programs` (`id`, `name`, `description`) VALUES
(1, 'MI programa', 'ksdjhksdjsd');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `subjects`
--

CREATE TABLE IF NOT EXISTS `subjects` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) DEFAULT NULL,
  `abbreviation` varchar(10) NOT NULL,
  `code` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=15 ;

--
-- Volcado de datos para la tabla `subjects`
--

INSERT INTO `subjects` (`id`, `name`, `abbreviation`, `code`) VALUES
(1, 'MatemÃ¡ticas/Apliaciones', 'DS, CN', 0),
(2, 'Algoritmos y Complejidad', 'AL', 1),
(3, 'Arquitectura / S. Operativos', 'AR, OS', 2),
(4, 'ComputaciÃ³n centrada en Redes', 'NC', 3),
(5, 'Lenguajes de ProgramaciÃ³n', 'PL', 4),
(6, 'HCI/GrÃ¡ficos', 'HC, GV', 5),
(7, 'Sistemas Inteligentes', 'IS', 6),
(8, 'GestiÃ³n de la InformaciÃ³n', 'IM', 7),
(10, 'Social y Profesional', 'SP', 8),
(11, 'IngenierÃ­a de Software', 'SE', 9);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `topics`
--

CREATE TABLE IF NOT EXISTS `topics` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `unit_id` int(11) NOT NULL,
  `name` varchar(500) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1096 ;

--
-- Volcado de datos para la tabla `topics`
--

INSERT INTO `topics` (`id`, `unit_id`, `name`) VALUES
(1, 1, 'Functions (surjections, injections, inverses, composition)'),
(2, 1, 'Relations (reflexivity, symmetry, transitivity, equivalence relations)'),
(3, 1, 'Sets (Venn diagrams, complements, Cartesian products, power sets)'),
(4, 1, 'Pigeonhole principle'),
(5, 1, 'Cardinality and countability'),
(6, 2, 'Propositional logic'),
(7, 2, 'Logical connectives'),
(8, 2, 'Truth tables'),
(9, 2, 'Normal forms (conjunctive and disjunctive)'),
(10, 2, 'Validity'),
(11, 2, 'Predicate logic'),
(12, 2, 'Universal and existential quantification'),
(13, 2, 'Modus ponens and modus tollens'),
(14, 2, 'Limitations of predicate logic'),
(15, 3, 'Notions of implication, converse, inverse, contrapositive, negation,nd contradiction'),
(16, 3, 'The structure of mathematical proofs'),
(17, 3, 'Direct proofs'),
(18, 3, 'Proof by counterexample'),
(19, 3, 'Proof by contradiction'),
(20, 3, 'Mathematical induction'),
(21, 3, 'Strong induction'),
(22, 3, 'Recursive mathematical definitions'),
(23, 3, 'Well orderings'),
(24, 4, 'Counting arguments'),
(25, 4, 'Sum and product rule'),
(26, 4, 'Inclusion-exclusion principle'),
(27, 4, 'Arithmetic and geometric progressions'),
(28, 4, 'Fibonacci numbers'),
(29, 4, 'The pigeonhole principle'),
(30, 4, 'Permutations and combinations'),
(31, 4, 'Basic definitions'),
(32, 4, 'Pascals identity'),
(33, 4, 'The binomial theorem'),
(34, 4, 'Solving recurrence relations'),
(35, 4, 'Common examples'),
(36, 4, 'The Master theorem'),
(37, 5, 'Trees'),
(38, 5, 'Undirected graphs'),
(39, 5, 'Directed graphs'),
(40, 5, 'Spanning trees/forests'),
(41, 5, 'Traversal strategies'),
(42, 6, 'Finite probability space, probability measure, events'),
(43, 6, 'Conditional probability, independence, Bayes'' theorem'),
(44, 6, 'Integer random variables, expectation'),
(45, 6, 'Law of large numbers'),
(46, 7, 'Basic syntax and semantics of a higher-level language'),
(47, 7, 'Variables, types, expressions, and assignment'),
(48, 7, 'Simple I/O'),
(49, 7, 'Conditional and iterative control structures'),
(50, 7, 'Functions and parameter passing'),
(51, 7, 'Structured decomposition'),
(52, 8, 'Problem-solving strategies'),
(53, 8, 'The role of algorithms in the problem-solving process'),
(54, 8, 'Implementation strategies for algorithms'),
(55, 8, 'Debugging strategies'),
(56, 8, 'The concept and properties of algorithms'),
(57, 9, 'Representation of numeric data'),
(58, 9, 'Range, precision, and rounding errors'),
(59, 9, 'Arrays'),
(60, 9, 'Representation of character data'),
(61, 9, 'Strings and string processing'),
(62, 9, 'Runtime storage management'),
(63, 9, 'Pointers and references'),
(64, 9, 'Linked structures'),
(65, 9, 'Implementation strategies for stacks, queues, and hash tables'),
(66, 9, 'Implementation strategies for graphs and trees'),
(67, 9, 'Strategies for choosing the right data structure'),
(68, 10, 'The concept of recursion'),
(69, 10, 'Recursive mathematical functions'),
(70, 10, 'Simple recursive functions'),
(71, 10, 'Divide-and-conquer strategies'),
(72, 10, 'Recursive backtracking'),
(73, 11, 'Event-handling methods'),
(74, 11, 'Event propagation'),
(75, 11, 'Exception handling'),
(76, 12, 'Object-oriented design'),
(77, 12, 'Encapsulation and information-hiding'),
(78, 12, 'Separation of behavior and implementation'),
(79, 12, 'Classes and subclasses'),
(80, 12, 'Inheritance (overriding, dynamic dispatch)'),
(81, 12, 'Polymorphism (subtype polymorphism vs. inheritance)'),
(82, 13, 'Role and purpose of computer and network security'),
(83, 13, 'Security goals: confidentiality, integrity, availability triad'),
(84, 13, 'Security standards and policies'),
(85, 13, 'Security mindset'),
(86, 13, 'Defense in depth'),
(87, 13, 'Common threats: worms, viruses, trojans, denial of service'),
(88, 13, 'Risk assessment and cost-benefit analyses'),
(89, 13, 'Security versus usability, time, and/or money tradeoffs'),
(90, 14, 'Important of checking for and avoiding array and string overflows'),
(91, 14, 'Programming language constructs to avoid and alternatives'),
(92, 14, 'How attackers use overflows to smash the run-time stack'),
(93, 14, 'Asymptotic analysis of upper and average complexity bounds'),
(94, 15, 'Identifying differences among best, average, and worst case behaviors'),
(95, 15, 'Big O, little o, omega, and theta notation'),
(96, 15, 'Standard complexity classes'),
(97, 15, 'Empirical measurements of performance'),
(98, 15, 'Time and space tradeoffs in algorithms'),
(99, 15, 'Using recurrence relations to analyze recursive algorithms'),
(100, 16, 'Brute-force algorithms'),
(101, 16, 'Greedy algorithms'),
(102, 16, 'Divide-and-conquer'),
(103, 16, 'Backtracking'),
(104, 16, 'Branch-and-bound'),
(105, 16, 'Heuristics'),
(106, 16, 'Pattern matching and string/text algorithms'),
(107, 16, 'Numerical approximation algorithms'),
(108, 17, 'Simple numerical algorithms'),
(109, 17, 'Sequential and binary search algorithms'),
(110, 17, 'Quadratic sorting algorithms (selection, insertion)'),
(111, 17, 'O(N log N) sorting algorithms (Quicksort, heapsort, mergesort)'),
(112, 17, 'Hash tables, including collision-avoidance strategies'),
(113, 17, 'Binary search trees'),
(114, 17, 'Representations of graphs (adjacency list, adjacency matrix)'),
(115, 17, 'Depth- and breadth-first traversals'),
(116, 17, 'Shortest-path algorithms (Dijkstra''s and Floyd''s algorithms)'),
(117, 17, 'Transitive closure (Floyd''s algorithm)'),
(118, 17, 'Minimum spanning tree (Prim''s and Kruskal''s algorithms)'),
(119, 17, 'Topological sort'),
(120, 18, 'Consensus and election'),
(121, 18, 'Termination detection'),
(122, 18, 'Fault tolerance'),
(123, 18, 'Stabilization'),
(124, 19, 'Finite-state machines'),
(125, 19, 'Context-free grammars'),
(126, 19, 'Tractable and intractable problems'),
(127, 19, 'Uncomputable functions'),
(128, 19, 'The halting problem'),
(129, 19, 'Implications of uncomputability'),
(130, 20, 'Definition of the classes P and NP'),
(131, 20, 'NP-completeness (Cook''s theorem)'),
(132, 20, 'Standard NP-complete problems'),
(133, 20, 'Reduction techniques'),
(134, 21, 'Deterministic finite automata (DFAs)'),
(135, 21, 'Nondeterministic finite automata (NFAs)'),
(136, 21, 'Equivalence of DFAs and NFAs'),
(137, 21, 'Regular expressions'),
(138, 21, 'The pumping lemma for regular expressions'),
(139, 21, 'Push-down automata (PDAs)'),
(140, 21, 'Relationship of PDAs and context-free grammars'),
(141, 21, 'Properties of context-free grammars'),
(142, 21, 'Turing machines'),
(143, 21, 'Nondeterministic Turing machines'),
(144, 21, 'Sets and languages'),
(145, 21, 'Chomsky hierarchy'),
(146, 21, 'The Church-Turing thesis'),
(147, 22, 'Amortized analysis'),
(148, 22, 'Online and offline algorithms'),
(149, 22, 'Randomized algorithms'),
(150, 22, 'Dynamic programming'),
(151, 22, 'Combinatorial optimization'),
(152, 23, 'Historical overview of cryptography'),
(153, 23, 'Private-key cryptography and the key-exchange problem'),
(154, 23, 'Public-key cryptography'),
(155, 23, 'Digital signatures'),
(156, 23, 'Security protocols'),
(157, 23, 'Applications (zero-knowledge proofs, authentication, and so on)'),
(158, 24, 'Line segments: properties, intersections'),
(159, 24, 'Convex hull finding algorithms'),
(160, 25, 'PRAM model'),
(161, 25, 'Exclusive versus concurrent reads and writes'),
(162, 25, 'Pointer jumping'),
(163, 25, 'Brent''s theorem and work efficiency'),
(164, 26, 'Introduction to digital logic (logic gates, flip-flops, circuits)'),
(165, 26, 'Logic expressions and Boolean functions'),
(166, 26, 'Representation of numeric data'),
(167, 26, 'Signed and unsigned arithmetic'),
(168, 26, 'Range, precision, and errors in floating-point arithmetic'),
(169, 26, 'Representation of text, audio, and images'),
(170, 26, 'Data compression'),
(171, 27, 'Overview of the history of the digital computer'),
(172, 27, 'Introduction to instruction set architecture, microarchitecture and system architecture'),
(173, 27, 'Processor architecture - instruction types, register sets, addressing modes'),
(174, 27, 'Processor structures - memory-to-register and load/store architectures'),
(175, 27, 'Instruction sequencing, flow-of-control, subroutine call and return mechanisms'),
(176, 27, 'Structure of machine-level programs'),
(177, 27, 'Limitations of low-level architectures'),
(178, 27, 'Low-level architectural support for high-level languages'),
(179, 28, 'I/O fundamentals: handshaking and buffering'),
(180, 28, 'Interrupt mechanisms: vectored and prioritized, interrupt acknowledgment'),
(181, 28, 'Buses: protocols, arbitration, direct-memory access (DMA)'),
(182, 28, 'Examples of modern buses: e.g., PCIe, USB, Hypertransport'),
(183, 29, 'Storage systems and their technology (semiconductor, magnetic)'),
(184, 29, 'Storage standards (CD-ROM, DVD)'),
(185, 29, 'Memory hierarchy, latency and throughput'),
(186, 29, 'Cache memories - operating principles, replacement policies, multilevel cache, cache coherency'),
(187, 30, 'Review of register transfer language to describe internal operations in a computer'),
(188, 30, 'Microarchitectures - hardwired and microprogrammed realizations'),
(189, 30, 'Instruction pipelining and instruction-level parallelism (ILP)'),
(190, 30, 'Overview of superscalar architectures'),
(191, 30, 'Processor and system performance'),
(192, 30, 'Performance - their meeasures and their limitations'),
(193, 30, 'The significance of power dissipation and its effects on computing structures'),
(194, 31, 'Amdahl''s law'),
(195, 31, 'Short vector processing (multimedia operations)'),
(196, 31, 'Multicore and multithreaded processors'),
(197, 31, 'Flynn''s taxonomy: Multiprocessor structures and architectures'),
(198, 31, 'Programming multiprocessor systems'),
(199, 31, 'GPU and special-purpose graphics processors'),
(200, 31, 'Introduction to reconfigurable logic and special-purpose processors'),
(201, 32, 'Branch prediction'),
(202, 32, 'Speculative execution'),
(203, 32, 'Superscalar architecture'),
(204, 32, 'Out-of-order execution'),
(205, 32, 'Multithreading'),
(206, 32, 'Scalability'),
(207, 32, 'Introduction to VLIW and EPIC architectures'),
(208, 32, 'Memory access ordering'),
(209, 33, 'Introduction to LANs and WANs and the history of networking and the Internet'),
(210, 33, 'Layered protocol design, network standards and standardization bodies'),
(211, 33, 'Network computing and distributed multimedia'),
(212, 33, 'Mobile and wireless computing'),
(213, 33, 'Streams and datagrams'),
(214, 33, 'Physical layer networking concepts'),
(215, 33, 'Data link layer concepts (framing, error control, flow control, protocols)'),
(216, 33, 'Internetworking and routing (routing algorithms, internetworking, congestion control)'),
(217, 33, 'Transport layer services (connection establishment, performance issues)'),
(218, 34, 'Representing analog values digitally - quantization and sampling'),
(219, 34, 'Sound and audio, image and graphics, animation and video'),
(220, 34, 'Multimedia standards (audio, music, graphics, image, telephony, video, TV)'),
(221, 34, 'Input transducers (temperature, pressure, position, movement)'),
(222, 34, 'Input devices: mice, keyboards (text and musical), scanners, touch-screen, voice'),
(223, 34, 'Output devices: displays, printers'),
(224, 34, 'Encoding and decoding of multimedia systems including compression and decompression'),
(225, 34, 'Example of computer-based systems: GPS, MP3 players, digital cameras'),
(226, 35, 'Semiconductor technology and Moore''s law'),
(227, 35, 'Limitations to semiconductor technology'),
(228, 35, 'Quantum computing'),
(229, 35, 'Optical computing'),
(230, 35, 'Molecular (biological) computing'),
(231, 35, 'New memory technologies'),
(232, 36, 'Role and purpose of the operating system'),
(233, 36, 'History of operating system development'),
(234, 36, 'Functionality of a typical operating system'),
(235, 36, 'Mechanisms to support client-server models, hand-held devices'),
(236, 36, 'Design issues (efficiency, robustness, flexibility, portability, security, compatibility)'),
(237, 36, 'Influences of security, networking, multimedia, windows'),
(238, 37, 'Structuring methods (monolithic, layered, modular, micro-kernel models)'),
(239, 37, 'Abstractions, processes, and resources'),
(240, 37, 'Concepts of application program interfaces (APIs)'),
(241, 37, 'Application needs and the evolution of hardware/software techniques'),
(242, 37, 'Device organization'),
(243, 37, 'Interrupts: methods and implementations'),
(244, 37, 'Concept of user/system state and protection, transition to kernel mode'),
(245, 38, 'States and state diagrams'),
(246, 38, 'Structures (ready list, process control blocks, and so forth)'),
(247, 38, 'Dispatching and context switching'),
(248, 38, 'The role of interrupts'),
(249, 38, 'Concurrent execution: advantages and disadvantages'),
(250, 38, 'The "mutual exclusion" problem and some solutions'),
(251, 38, 'Deadlock: causes, conditions, prevention'),
(252, 38, 'Models and mechanisms (semaphores, monitors, condition variables, rendezvous)'),
(253, 38, 'Producer-consumer problems and synchronization'),
(254, 38, 'Multiprocessor issues (spin-locks, reentrancy)'),
(255, 39, 'Preemptive and nonpreemptive scheduling'),
(256, 39, 'Schedulers and policies'),
(257, 39, 'Processes and threads'),
(258, 39, 'Deadlines and real-time issues'),
(259, 40, 'Review of physical memory and memory management hardware'),
(260, 40, 'Paging and virtual memory'),
(261, 40, 'Working sets and thrashing'),
(262, 40, 'Caching'),
(263, 41, 'Characteristics of serial and parallel devices'),
(264, 41, 'Abstracting device differences'),
(265, 41, 'Buffering strategies'),
(266, 41, 'Direct memory access'),
(267, 41, 'Recovery from failures'),
(268, 42, 'Overview of system security'),
(269, 42, 'Policy/mechanism separation'),
(270, 42, 'Security methods and devices'),
(271, 42, 'Protection, access control, and authentication'),
(272, 42, 'Backups'),
(273, 43, 'Files: data, metadata, operations, organization, buffering, sequential, nonsequential'),
(274, 43, 'Directories: contents and structure'),
(275, 43, 'File systems: partitioning, mount/unmount, virtual file systems'),
(276, 43, 'Standard implementation techniques'),
(277, 43, 'Memory-mapped files'),
(278, 43, 'Special-purpose file systems'),
(279, 43, 'Naming, searching, access, backups'),
(280, 44, 'Process and task scheduling'),
(281, 44, 'Memory/disk management requirements in a real-time environment'),
(282, 44, 'Failures, risks, and recovery'),
(283, 44, 'Special concerns in real-time systems'),
(284, 45, 'Fundamental concepts: reliable and available systems'),
(285, 45, 'Spatial and temporal redundancy'),
(286, 45, 'Methods used to implement fault tolerance'),
(287, 45, 'Examples of reliable systems'),
(288, 46, 'Why system performance needs to be evaluated'),
(289, 46, 'What is to be evaluated'),
(290, 46, 'Policies for caching, paging, scheduling, memory management, security, and so forth'),
(291, 46, 'Evaluation models: deterministic, analytic, simulation, or implementation-specific'),
(292, 46, 'How to collect evaluation data (profiling and tracing mechanisms)'),
(293, 47, 'Scripting and the role of scripting languages'),
(294, 47, 'Basic system commands'),
(295, 47, 'Creating scripts, parameter passing'),
(296, 47, 'Executing a script'),
(297, 47, 'Influences of scripting on programming'),
(298, 48, 'Digital forensics and its relationship to other forensic disciplines'),
(299, 48, 'Incident response responsibilities'),
(300, 48, 'Forensic procedures'),
(301, 48, 'Digital evidence and tracking'),
(302, 48, 'Rules/Standards of Evidence'),
(303, 48, 'Evidence gathering and analysis'),
(304, 48, 'Forensic mechanisms'),
(305, 48, 'Profiling'),
(306, 48, 'Tools to support investigative work'),
(307, 49, 'Models of protection'),
(308, 49, 'Memory protection'),
(309, 49, 'Encryption'),
(310, 49, 'Recovery management'),
(311, 49, 'Types of access control: mandatory, discretionary, originator-controlled, role-based'),
(312, 49, 'Access control matrix model'),
(313, 49, 'Harrison-Russo-Ullman model and undecidability of security'),
(314, 49, 'Confidentiality models such as Bell-LaPadula'),
(315, 49, 'Integrity models such as Biba and Clark-Wilson'),
(316, 49, 'Conflict of interest models such as the Chinese Wall'),
(317, 50, 'Background and history of networking and the Internet'),
(318, 50, 'Network architectures'),
(319, 50, 'The range of specializations within net-centric computing'),
(320, 50, 'Networks and protocols'),
(321, 50, 'Networked multimedia systems'),
(322, 50, 'Distributed computing'),
(323, 50, 'Client/server and Peer to Peer paradigms'),
(324, 50, 'Mobile and wireless computing'),
(325, 51, 'Network standards and standardization bodies'),
(326, 51, 'The ISO 7-layer reference model in general and its instantiation in TCP/IP'),
(327, 51, 'Overview of Physical and Data Link layer concepts (framing, error control, flow control, protocols)'),
(328, 51, 'Data Link layer access control concepts'),
(329, 51, 'Internetworking and routing (routing algorithms, internetworking, congestion control)'),
(330, 51, 'Transport layer services (connection establishment, performance issues, flow and error control)'),
(331, 52, 'Fundamentals of cryptography: Secret-key algorithms'),
(332, 52, 'Fundamentals of cryptography: Public-key algorithms'),
(333, 52, 'Authentication protocols'),
(334, 52, 'Digital signatures: Examples'),
(335, 52, 'Network attack types: Denial of service, flooding, sniffing and traffic redirection, message integrity attacks, identity hijacking, exploit attacks (buffer overruns, Trojans, backdoors), inside attacks, infrastructure (DNS hijacking, route blackholing, misbehaving routers that drop traffic), etc.)'),
(336, 52, 'Use of passwords and access control mechanisms'),
(337, 52, 'Basic network defense tools and strategies: Intrusion Detection'),
(338, 52, 'Basic network defense tools and strategies: Firewalls'),
(339, 52, 'Basic network defense tools and strategies: Detection of malware'),
(340, 52, 'Basic network defense tools and strategies: Kerberos'),
(341, 52, 'Basic network defense tools and strategies: IPSec'),
(342, 52, 'Basic network defense tools and strategies: Virtual Private Networks'),
(343, 52, 'Basic network defense tools and strategies: Network Address Translation'),
(344, 52, 'Network Resource Management policies'),
(345, 52, 'Auditing and logging'),
(346, 53, 'Web technologies: Server-side programs'),
(347, 53, 'Web technologies: Client-side scripts'),
(348, 53, 'Web technologies: The applet concept'),
(349, 53, 'Characteristics of web servers: Handling permissions'),
(350, 53, 'Characteristics of web servers: File management'),
(351, 53, 'Characteristics of web servers: Capabilities of common server architectures'),
(352, 53, 'Role of client computers'),
(353, 53, 'Nature of the client-server relationship'),
(354, 53, 'Web protocols'),
(355, 53, 'Support tools for web site creation and web management'),
(356, 53, 'Developing Internet information servers'),
(357, 53, 'Publishing information and applications'),
(358, 53, 'Grid Computing, cluster, mesh'),
(359, 53, 'Web Services, Web 2.ajax'),
(360, 54, 'Protocols at the application layer'),
(361, 54, 'Web interfaces: Browsers and APIs'),
(362, 54, 'Web Search Technologies'),
(363, 54, 'Principles of web engineering'),
(364, 54, 'Database-driven web sites'),
(365, 54, 'Remote procedure calls (RPC)'),
(366, 54, 'Lightweight distributed objects'),
(367, 54, 'The role of middleware'),
(368, 54, 'Support tools'),
(369, 54, 'Security issues in distributed object systems'),
(370, 54, 'Enterprise-wide web-based applications: Service-oriented Architectures'),
(371, 55, 'Overview of the issues of network management'),
(372, 55, 'Use of passwords and access control mechanisms'),
(373, 55, 'Domain names and name services'),
(374, 55, 'Issues for Internet service providers (ISPs)'),
(375, 55, 'Security issues and firewalls'),
(376, 55, 'Quality of service issues: performance, failure recovery'),
(377, 56, 'Analog and digital representations'),
(378, 56, 'Encoding and decoding algorithms'),
(379, 56, 'Lossless and lossy compression'),
(380, 56, 'Data compression: Huffman coding and the Ziv-Lempel algorithm'),
(381, 56, 'Audio compression and decompression'),
(382, 56, 'Image compression and decompression'),
(383, 56, 'Video compression and decompression'),
(384, 56, 'Performance issues: timing, compression factor, suitability for real-time use'),
(385, 57, 'Sound and audio, image and graphics, animation and video'),
(386, 57, 'Multimedia standards (audio, music, graphics, image, telephony, video, TV)'),
(387, 57, 'Capacity planning and performance issues'),
(388, 57, 'Input and output devices (scanners, digital camera, touch-screens, voice-activated)'),
(389, 57, 'MIDI keyboards, synthesizers'),
(390, 57, 'Storage standards (Magneto Optical disk, CD-ROM, DVD)'),
(391, 57, 'Multimedia servers and file systems'),
(392, 57, 'Tools to support multimedia development'),
(393, 58, 'Overview of the history, evolution, and compatibility of wireless standards'),
(394, 58, 'The special problems of wireless and mobile computing'),
(395, 58, 'Wireless local area networks and satellite-based networks'),
(396, 58, 'Wireless local loops'),
(397, 58, 'Mobile Internet protocol'),
(398, 58, 'Mobile aware adaption'),
(399, 58, 'Extending the client-server model to accommodate mobility'),
(400, 58, 'Mobile data access: server data dissemination and client cache management'),
(401, 58, 'Software package support for mobile and wireless computing'),
(402, 58, 'The role of middleware and support tools'),
(403, 58, 'Performance issues'),
(404, 58, 'Emerging technologies'),
(405, 59, 'History of programming languages'),
(406, 59, 'Brief survey of programming paradigms'),
(407, 59, 'Procedural languages'),
(408, 59, 'Object-oriented languages'),
(409, 59, 'Functional languages'),
(410, 59, 'Declarative, non-algorithmic languages'),
(411, 59, 'Scripting languages'),
(412, 59, 'The effects of scale on programming methodology'),
(413, 60, 'The concept of a virtual machine'),
(414, 60, 'Hierarchy of virtual machines'),
(415, 60, 'Intermediate languages'),
(416, 60, 'Security issues arising from running code on an alien machine'),
(417, 61, 'Comparison of interpreters and compilers'),
(418, 61, 'Language translation phases (lexical analysis, parsing, code generation, optimization)'),
(419, 61, 'Machine-dependent and machine-independent aspects of translation'),
(420, 62, 'The conception of types as a set of values with together with a set of operations'),
(421, 62, 'Declaration models (binding, visibility, scope, and lifetime)'),
(422, 62, 'Overview of type-checking'),
(423, 62, 'Garbage collection'),
(424, 63, 'Procedures, functions, and iterators as abstraction mechanisms'),
(425, 63, 'Parameterization mechanisms (reference vs. value)'),
(426, 63, 'Activation records and storage management'),
(427, 63, 'Type parameters and parameterized types'),
(428, 63, 'Modules in programming languages'),
(429, 64, 'Object-oriented design'),
(430, 64, 'Encapsulation and information-hiding'),
(431, 64, 'Separation of behavior and implementation'),
(432, 64, 'Classes and subclasses'),
(433, 64, 'Inheritance (overriding, dynamic dispatch)'),
(434, 64, 'Polymorphism (subtype polymorphism vs. inheritance)'),
(435, 64, 'Class hierarchies'),
(436, 64, 'Collection classes and iteration protocols'),
(437, 64, 'Internal representations of objects and method tables'),
(438, 65, 'Overview and motivation of functional languages'),
(439, 65, 'Recursion over lists, natural numbers, trees, and other recursively-defined data'),
(440, 65, 'Pragmatics (debugging by divide and conquer; persistency of data structures)'),
(441, 65, 'Amortized efficiency for functional data structures'),
(442, 65, 'Closures and uses of functions as data (infinite sets, streams)'),
(443, 66, 'Application of regular expressions in lexical scanners'),
(444, 66, 'Parsing (concrete and abstract syntax, abstract syntax trees)'),
(445, 66, 'Application of context-free grammars in table-driven and recursive-descent parsing'),
(446, 66, 'Symbol table management'),
(447, 66, 'Code generation by tree walking'),
(448, 66, 'Architecture-specific operations: instruction selection and register allocation'),
(449, 66, 'Optimization techniques'),
(450, 66, 'The use of tools in support of the translation process and the advantages thereof'),
(451, 66, 'Program libraries and separate compilation'),
(452, 66, 'Building syntax-directed tools'),
(453, 67, 'Data type as set of values with set of operations'),
(454, 67, 'Data types'),
(455, 67, 'Elementary types'),
(456, 67, 'Product and coproduct types'),
(457, 67, 'Algebraic types'),
(458, 67, 'Recursive types'),
(459, 67, 'Arrow (function) types'),
(460, 67, 'Parameterized types'),
(461, 67, 'Type-checking models'),
(462, 67, 'Semantic models of user-defined types'),
(463, 67, 'Type abbreviations'),
(464, 67, 'Abstract data types'),
(465, 67, 'Type equality'),
(466, 67, 'Parametric polymorphism'),
(467, 67, 'Subtype polymorphism'),
(468, 67, 'Type-checking algorithms'),
(469, 68, 'Informal semantics'),
(470, 68, 'Overview of formal semantics'),
(471, 68, 'Denotational semantics'),
(472, 68, 'Axiomatic semantics'),
(473, 68, 'Operational semantics'),
(474, 69, 'General principles of language design'),
(475, 69, 'Design goals'),
(476, 69, 'Typing regimes'),
(477, 69, 'Data structure models'),
(478, 69, 'Control structure models'),
(479, 69, 'Abstraction mechanisms'),
(480, 70, 'Motivation: Why the study of how people interact with technology is vital for the development of most usable'),
(481, 70, 'and acceptable systems'),
(482, 70, 'Contexts for HCI (mobile devices, consumer devices, business applications, web, business applications,'),
(483, 70, 'collaboration systems, games, etc.)'),
(484, 70, 'Process for user-centered development: early focus on users, empirical testing, iterative design.'),
(485, 70, 'Different measures for evaluation: utility, efficiency, learnability, user satisfaction.'),
(486, 70, 'Models that inform human-computer interaction (HCI) design: attention, perception and recognition,'),
(487, 70, 'movement, and cognition.'),
(488, 70, 'Social issues influencing HCI design and use: culture, communication, and organizations.'),
(489, 70, 'Accommodating human diversity, including universal design and accessibility and designing for multiple'),
(490, 70, 'cultural and linguistic contexts.'),
(491, 70, 'The most common interface design mistakes.'),
(492, 70, 'User interface standards'),
(493, 71, 'Principles of graphical user interfaces (GUIs).'),
(494, 71, 'Action-object versus object-action.'),
(495, 71, 'User interface events.'),
(496, 71, 'Constructing a user-interface for a native system vs. the web.'),
(497, 72, 'Evaluation without typical users: walkthroughs, KLM, expert-based analysis, heuristics, guidelines, and standards'),
(498, 72, 'Evaluation with typical users: observation, think-aloud, interview, survey, experiment.'),
(499, 72, 'Challenges to effective evaluation: sampling, generalization.'),
(500, 72, 'Reporting the results of evaluations'),
(501, 73, 'Approaches, characteristics, and overview of product development process, with special emphasis on software'),
(502, 73, 'development process.'),
(503, 73, 'Functionality and usability requirements'),
(504, 73, 'Techniques for gathering requirements: task analysis, interviews, surveys'),
(505, 73, 'Notations for specifying user interfaces'),
(506, 73, 'Prototyping techniques and tools'),
(507, 73, 'Sketching'),
(508, 73, 'Paper storyboards'),
(509, 73, 'Low-fidelity or paper prototyping'),
(510, 73, 'Medium fidelity prototyping'),
(511, 73, 'Prototyping tools and GUI builders'),
(512, 73, 'User-interface software techniques'),
(513, 73, 'Inheritance and dynamic dispatch'),
(514, 73, 'Prototyping languages and GUI builders'),
(515, 74, 'Choosing interaction styles (command line, menu, voice, gestural, WIMP) and interaction techniques'),
(516, 74, 'Choosing the right widget for users and tasks'),
(517, 74, 'HCI aspects of screen design: layout, color, fonts, labeling'),
(518, 74, 'Handling human/system failure.'),
(519, 74, 'Beyond simple screen design: visualization, representation, metaphor'),
(520, 74, 'Multi-modal interaction: graphics, sound, and haptics.'),
(521, 74, '3D interaction and virtual reality'),
(522, 74, 'Designing for small devices, e.g., cell phones.'),
(523, 74, 'Multi-cultural interaction and communication'),
(524, 75, 'UIMS, dialogue independence and levels of analysis, Seeheim model'),
(525, 75, 'Widget classes and libraries'),
(526, 75, 'Event management and user interaction'),
(527, 75, 'Web design vs. native application design'),
(528, 75, 'Geometry management'),
(529, 75, 'GUI builders and UI programming environments'),
(530, 75, 'Cross-platform design'),
(531, 75, 'Design for small, mobile devices'),
(532, 76, 'Categorization and information architectures: hierarchies, grids, hypermedia , networks'),
(533, 76, 'Information retrieval and human performance'),
(534, 76, 'Web search'),
(535, 76, 'Usability of database query languages'),
(536, 76, 'Graphics'),
(537, 76, 'Sound'),
(538, 76, 'HCI design of multimedia information systems'),
(539, 76, 'Speech recognition and natural language processing'),
(540, 76, 'Information appliances and mobile computing'),
(541, 76, 'Interactive visualizations'),
(542, 76, 'Information design and navigation'),
(543, 76, 'Touch interfaces'),
(544, 77, 'Groupware to support specialized tasks: document preparation, multi-player games'),
(545, 77, 'Asynchronous group communication: e-mail, bulletin boards, listservs, wikis, ...'),
(546, 77, 'Synchronous group communication: chat rooms, conferencing'),
(547, 77, 'Online communities: MUDs/MOOs,'),
(548, 77, 'Software characters and intelligent agents, virtual worlds and avatars'),
(549, 77, 'Social psychology'),
(550, 77, 'Social networking'),
(551, 77, 'Social Computing'),
(552, 77, 'Collaborative usability techniques.'),
(553, 78, 'Interaction design for engaging interactive experiences'),
(554, 78, 'Presence, tele-presence and immersive environments'),
(555, 78, 'Affective interaction and emotion'),
(556, 78, 'Ambient intelligence'),
(557, 78, 'Physical computing and embodied interaction'),
(558, 79, 'Applied psychology and security policies'),
(559, 79, 'Usability design and security'),
(560, 79, 'Social engineering'),
(561, 79, 'Identity theft'),
(562, 79, 'Phishing'),
(563, 80, 'Hierarchy of graphics software'),
(564, 80, 'Using a graphics API'),
(565, 80, 'Simple color models (RGB, HSB, CMYK)'),
(566, 80, 'Homogeneous coordinates'),
(567, 80, 'Affine transformations (scaling, rotation, translation)'),
(568, 80, 'Viewing transformation'),
(569, 80, 'Clipping'),
(570, 81, 'Raster and vector graphics systems'),
(571, 81, 'Video display devices'),
(572, 81, 'Physical and logical input devices'),
(573, 81, 'Issues facing the developer of graphical systems'),
(574, 83, 'Polygonal representation of objects'),
(575, 83, 'Parametric polynomial curves and surfaces'),
(576, 83, 'Constructive Solid Geometry (CSG) representation'),
(577, 83, 'Implicit representation of curves and surfaces'),
(578, 83, 'Spatial subdivision techniques'),
(579, 83, 'Procedural models'),
(580, 83, 'Deformable models'),
(581, 83, 'Subdivision surfaces'),
(582, 83, 'Multiresolution modeling'),
(583, 83, 'Reconstruction'),
(584, 84, 'Line generation algorithms (Bresenham)'),
(585, 84, 'Font generation: outline vs. bitmap'),
(586, 84, 'Light-source and material properties'),
(587, 84, 'Ambient, diffuse, and specular reflections'),
(588, 84, 'Phong reflection model'),
(589, 84, 'Rendering of a polygonal surface; flat, Gouraud, and Phong shading'),
(590, 84, 'Texture mapping, bump texture, environment map'),
(591, 84, 'Introduction to ray tracing'),
(592, 84, 'Image synthesis, sampling techniques, and anti-aliasing'),
(593, 85, 'Transport equations'),
(594, 85, 'Ray tracing algorithms'),
(595, 85, 'Photon tracing'),
(596, 85, 'Radiosity for global illumination computation, form factors'),
(597, 85, 'Efficient approaches to global illumination'),
(598, 85, 'Monte Carlo methods for global illumination'),
(599, 85, 'Image-based rendering, panorama viewing, plenoptic function modeling'),
(600, 85, 'Rendering of complex natural phenomenon'),
(601, 85, 'Non-photorealistic rendering'),
(602, 86, 'Color quantization'),
(603, 86, 'Scan conversion of primitive, forward differencing'),
(604, 86, 'Tessellation of curved surfaces'),
(605, 86, 'Hidden surface removal methods'),
(606, 86, 'Z-buffer and frame buffer, color channels (a channel for opacity)'),
(607, 86, 'Advanced geometric modeling techniques'),
(608, 87, 'Key-frame animation'),
(609, 87, 'Camera animation'),
(610, 87, 'Scripting system'),
(611, 87, 'Animation of articulated structures: inverse kinematics'),
(612, 87, 'Motion capture'),
(613, 87, 'Procedural animation'),
(614, 87, 'Deformation'),
(615, 88, 'Basic viewing and interrogation functions for visualization'),
(616, 88, 'Visualization of vector fields, tensors, and flow data'),
(617, 88, 'Visualization of scalar field or height field: isosurface by the marching cube method'),
(618, 88, 'Direct volume data rendering: ray-casting, transfer functions, segmentation, hardware'),
(619, 88, 'Information visualization: projection and parallel-coordinates methods'),
(620, 89, 'Stereoscopic display'),
(621, 89, 'Force feedback simulation, haptic devices'),
(622, 89, 'Viewer tracking'),
(623, 89, 'Collision detection'),
(624, 89, 'Visibility computation'),
(625, 89, 'Time-critical rendering, multiple levels of details (LOD)'),
(626, 89, 'Image-base VR system'),
(627, 89, 'Distributed VR, collaboration over computer network'),
(628, 89, 'Interactive modeling'),
(629, 89, 'User interface issues'),
(630, 89, 'Applications in medicine, simulation, and training'),
(631, 90, 'Image acquisition'),
(632, 90, 'The digital image and its properties'),
(633, 90, 'Image preprocessing'),
(634, 90, 'Segmentation (thresholding, edge- and region-based segmentation)'),
(635, 90, 'Shape representation and object recognition'),
(636, 90, 'Motion analysis'),
(637, 90, 'Case studies (object recognition, object tracking)'),
(638, 91, 'Purpose and nature of computational geometry'),
(639, 91, 'Application areas - convex hull, line intersection issues, Delauney triangulation, polgygon triangulation, Voroni diagrams'),
(640, 91, 'Combinatorial computational geometry: static problems such as developing efficient algorithms for certain geometric situations; dynamic problems including'),
(641, 91, 'Numerical computational geometry: gmodeling, computer-aided geometric design; curve and surface modeling including representation of these: Bezier curves, spline curves and surfaces; level set method.'),
(642, 92, 'The nature of games engines (as an integrated development environment) and their purpose'),
(643, 92, 'Hardware support including use of threading; performance issues; input devices'),
(644, 92, 'Typical components including rendering, and support for real-time graphics and interaction; also physics simulation, collision detaection, sound, artificial intelligence; terrain rendering'),
(645, 93, 'History of artificial intelligence'),
(646, 93, 'Philosophical questions'),
(647, 93, 'The Turing test'),
(648, 93, 'Searle''s "Chinese Room" thought experiment'),
(649, 93, 'Ethical issues in AI'),
(650, 93, 'Fundamental definitions'),
(651, 93, 'Optimal vs. human-like reasoning'),
(652, 93, 'Optimal vs. human-like behavior'),
(653, 93, 'Philosophical questions'),
(654, 93, 'Modeling the world'),
(655, 93, 'The role of heuristics'),
(656, 94, 'Problem spaces; problem solving by search'),
(657, 94, 'Brute-force search (breadth-first, depth-first, depth-first with iterative deepening)'),
(658, 94, 'Best-first search (generic best-first, Dijkstra''s algorithm, A*, admissibility of A*)'),
(659, 94, 'Two-player games (minimax search, alpha-beta pruning'),
(660, 94, 'Constraint satisfaction (backtracking and local search methods)'),
(661, 95, 'Review of propositional and predicate logic'),
(662, 95, 'Resolution and theorem proving'),
(663, 95, 'Nonmonotonic inference; unification and lifting, forward chaining, backward chaining, resolution'),
(664, 95, 'Probabilistic reasoning'),
(665, 95, 'Bayes theorem'),
(666, 96, 'Heuristics'),
(667, 96, 'Local search and optimization'),
(668, 96, 'Hill climbing'),
(669, 96, 'Genetic algorithms'),
(670, 96, 'Simulated annealing'),
(671, 96, 'Local beam search'),
(672, 96, 'Adversarial search for games'),
(673, 97, 'Structured representation: Frames and objects'),
(674, 97, 'Structured representation: Description logics'),
(675, 97, 'Structured representation: Inheritance systems'),
(676, 97, 'Non-monotonic reasoning: Nonclassical logics'),
(677, 97, 'Non-monotonic reasoning: Default reasoning'),
(678, 97, 'Non-monotonic reasoning: Belief revision'),
(679, 97, 'Non-monotonic reasoning: Preference logics'),
(680, 97, 'Non-monotonic reasoning: Integration of knowledge sources'),
(681, 97, 'Non-monotonic reasoning: Aggregation of conflicting belief'),
(682, 97, 'Reasoning on action and change: Situation calculus'),
(683, 97, 'Reasoning on action and change: Event calculus'),
(684, 97, 'Reasoning on action and change: Ramification problems'),
(685, 97, 'Temporal and spatial reasoning'),
(686, 97, 'Uncertainty: Probabilistic reasoning'),
(687, 97, 'Uncertainty: Bayesian nets'),
(688, 97, 'Uncertainty: Decision theory'),
(689, 97, 'Knowledge representation for diagnosis, qualitative representation'),
(690, 97, 'Ontology engineering'),
(691, 97, 'Semantic networks'),
(692, 98, 'Definition of agents'),
(693, 98, 'Successful applications and state-of-the-art agent-based systems'),
(694, 98, 'Agent architectures: Simple reactive agents'),
(695, 98, 'Agent architectures: Reactive planners'),
(696, 98, 'Agent architectures: Layered architectures'),
(697, 98, 'Agent architectures: Example architectures and applications'),
(698, 98, 'Agent theory: Commitments'),
(699, 98, 'Agent theory: Intentions'),
(700, 98, 'Agent theory: Decision-theoretic agents'),
(701, 98, 'Agent theory: Markov decision processes (MDP)'),
(702, 98, 'Software agents, personal assistants, and information access: Collaborative agents'),
(703, 98, 'Software agents, personal assistants, and information access: Information-gathering agents'),
(704, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Learning agents'),
(705, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Multi-agent systems'),
(706, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Economically inspired multi-agent systems'),
(707, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Collaborating agents'),
(708, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Agent teams'),
(709, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Agent modeling'),
(710, 98, 'Believable agents (synthetic characters, modeling emotions in agents): Multi-agent learning'),
(711, 98, 'Introduction to robotic agents'),
(712, 98, 'Mobile agents'),
(713, 99, 'Deterministic and stochastic grammar'),
(714, 99, 'Parsing algorithms'),
(715, 99, 'Corpus-based methods'),
(716, 99, 'Information retrieval and information extraction'),
(717, 99, 'Language translation'),
(718, 99, 'Speech recognition'),
(719, 100, 'Definition and examples of machine learning'),
(720, 100, 'Inductive learning, statistical based learning, reinforcement learning'),
(721, 100, 'Supervised learning'),
(722, 100, 'Learning decision trees'),
(723, 100, 'Learning neural networks'),
(724, 100, 'Learning belief networks'),
(725, 100, 'The nearest neighbor algorithm'),
(726, 100, 'Learning theory'),
(727, 100, 'The problem of overfitting'),
(728, 100, 'Unsupervised learning'),
(729, 100, 'Reinforcement learning'),
(730, 101, 'Definition and examples of planning systems'),
(731, 101, 'Planning as search'),
(732, 101, 'Operator-based planning'),
(733, 101, 'Planning graphs'),
(734, 101, 'Propositional planning'),
(735, 101, 'Extending planning systems (case-based, learning, and probabilistic systems)'),
(736, 101, 'Static world planning systems'),
(737, 101, 'Planning and execution including conditional planning and continuous planning'),
(738, 101, 'Mobile agent planning'),
(739, 101, 'Planning and robotics'),
(740, 102, 'Overview'),
(741, 102, 'State-of-the-art robot systems'),
(742, 102, 'Planning vs. reactive control'),
(743, 102, 'Uncertainty in control'),
(744, 102, 'Sensing'),
(745, 102, 'World models'),
(746, 102, 'Configuration space'),
(747, 102, 'Planning'),
(748, 102, 'Sensing'),
(749, 102, 'Robot programming'),
(750, 102, 'Navigation and control'),
(751, 102, 'Robotic software and its architecture'),
(752, 103, 'Perception: role and applications'),
(753, 103, 'Image formation: light, colour, shades'),
(754, 103, 'Image and object detection: feature recognition, object recognition'),
(755, 103, 'Technologies'),
(756, 103, 'Software characteristics'),
(757, 104, 'Information storage and retrieval (IS&R)'),
(758, 104, 'Information management applications'),
(759, 104, 'Information capture and representation'),
(760, 104, 'Metadata/schema association with data'),
(761, 104, 'Analysis and indexing'),
(762, 104, 'Search, retrieval, linking, navigation'),
(763, 104, 'Declarative and navigational queries'),
(764, 104, 'Information privacy, integrity, security, and preservation'),
(765, 104, 'Scalability, efficiency, and effectiveness'),
(766, 104, 'Concepts of Information Assurance (data persistence, integrity)'),
(767, 105, 'History and motivation for database systems'),
(768, 105, 'Components of database systems'),
(769, 105, 'DBMS functions'),
(770, 105, 'Database architecture and data independence'),
(771, 105, 'Use of a declarative query language'),
(772, 106, 'Data modeling'),
(773, 106, 'Conceptual models (such as entity-relationship or UML)'),
(774, 106, 'Object-oriented model'),
(775, 106, 'Relational data model'),
(776, 106, 'Semistructured data model (expressed using DTD or XMLSchema, for example)'),
(777, 107, 'The massive impact of indexes on query performance'),
(778, 107, 'The basic structure of an index'),
(779, 107, 'Keeping a buffer of data in memory'),
(780, 107, 'Creating indexes with SQL'),
(781, 107, 'Indexing text'),
(782, 107, 'Indexing the web (how search engines work)'),
(783, 108, 'Mapping conceptual schema to a relational schema'),
(784, 108, 'Entity and referential integrity'),
(785, 108, 'Relational algebra and relational calculus'),
(786, 109, 'Overview of database languages'),
(787, 109, 'SQL (data definition, query formulation, update sublanguage, constraints, integrity)'),
(788, 109, 'QBE and 4th-generation environments'),
(789, 109, 'Embedding non-procedural queries in a procedural language'),
(790, 109, 'Introduction to Object Query Language'),
(791, 109, 'Stored procedures'),
(792, 110, 'Database design'),
(793, 110, 'Functional dependency'),
(794, 110, 'Decomposition of a schema; lossless-join and dependency-preservation properties of a decomposition'),
(795, 110, 'Candidate keys, superkeys, and closure of a set of attributes'),
(796, 110, 'Normal forms (1NF, 2NF, 3NF, BCNF)'),
(797, 110, 'Multivalued dependency (4NF)'),
(798, 110, 'Join dependency (PJNF, 5NF)'),
(799, 110, 'Representation theory'),
(800, 111, 'Transactions'),
(801, 111, 'Failure and recovery'),
(802, 111, 'Concurrency control'),
(803, 112, 'Distributed data storage'),
(804, 112, 'Distributed query processing'),
(805, 112, 'Distributed transaction model'),
(806, 112, 'Concurrency control'),
(807, 112, 'Homogeneous and heterogeneous solutions'),
(808, 112, 'Client-server'),
(809, 113, 'Storage and file structure'),
(810, 113, 'Indexed files'),
(811, 113, 'Hashed files'),
(812, 113, 'Signature files'),
(813, 113, 'B-trees'),
(814, 113, 'Files with dense index'),
(815, 113, 'Files with variable length records'),
(816, 113, 'Database efficiency and tuning'),
(817, 114, 'The usefulness of data mining'),
(818, 114, 'Associative and sequential patterns'),
(819, 114, 'Data clustering'),
(820, 114, 'Market basket analysis'),
(821, 114, 'Data cleaning'),
(822, 114, 'Data visualization'),
(823, 115, 'Characters, strings, coding, text'),
(824, 115, 'Documents, electronic publishing, markup, and markup languages'),
(825, 115, 'Tries, inverted files, PAT trees, signature files, indexing'),
(826, 115, 'Morphological analysis, stemming, phrases, stop lists'),
(827, 115, 'Term frequency distributions, uncertainty, fuzziness, weighting'),
(828, 115, 'Vector space, probabilistic, logical, and advanced models'),
(829, 115, 'Information needs, relevance, evaluation, effectiveness'),
(830, 115, 'Thesauri, ontologies, classification and categorization, metadata'),
(831, 115, 'Bibliographic information, bibliometrics, citations'),
(832, 115, 'Routing and (community) filtering'),
(833, 115, 'Search and search strategy, information seeking behavior, user modeling, feedback'),
(834, 115, 'Information summarization and visualization'),
(835, 115, 'Integration of citation, keyword, classification scheme, and other terms'),
(836, 115, 'Protocols and systems (including Z39.5OPACs, WWW engines, research systems)'),
(837, 116, 'Hypertext models (early history, web, Dexter, Amsterdam, HyTime)'),
(838, 116, 'Link services, engines, and (distributed) hypertext architectures'),
(839, 116, 'Nodes, composites, and anchors'),
(840, 116, 'Dimensions, units, locations, spans'),
(841, 116, 'Browsing, navigation, views, zooming'),
(842, 116, 'Automatic link generation'),
(843, 116, 'Presentation, transformations, synchronization'),
(844, 116, 'Authoring, reading, and annotation'),
(845, 116, 'Protocols and systems (including web, HTTP)'),
(846, 117, 'Devices, device drivers, control signals and protocols, DSPs'),
(847, 117, 'Applications, media editors, authoring systems, and authoring'),
(848, 117, 'Streams/structures, capture/represent/transform, spaces/domains, compression/coding'),
(849, 117, 'Content-based analysis, indexing, and retrieval of audio, images, and video'),
(850, 117, 'Presentation, rendering, synchronization, multi-modal integration/interfaces'),
(851, 117, 'Real-time delivery, quality of service, audio/video conferencing, video-on-demand'),
(852, 118, 'Digitization, storage, and interchange'),
(853, 118, 'Digital objects, composites, and packages'),
(854, 118, 'Metadata, cataloging, author submission'),
(855, 118, 'Naming, repositories, archives'),
(856, 118, 'Spaces (conceptual, geographical, 2/3D, VR)'),
(857, 118, 'Architectures (agents, buses, wrappers/mediators), interoperability'),
(858, 118, 'Services (searching, linking, browsing, and so forth)'),
(859, 118, 'Intellectual property rights management, privacy, protection (watermarking)'),
(860, 118, 'Archiving and preservation, integrity'),
(861, 119, 'Prehistory - the world before 1946'),
(862, 119, 'History of computer hardware, software, networking'),
(863, 119, 'Pioneers of computing'),
(864, 120, 'Introduction to the social implications of computing'),
(865, 120, 'Social implications of networked communication'),
(866, 120, 'Growth of, control of, and access to the Internet'),
(867, 120, 'Gender-related issues'),
(868, 120, 'Cultural issues'),
(869, 120, 'International issues'),
(870, 120, 'Accessibility issues (e.g. underrepresentation of minorities, women and the disabled in the computing profession)'),
(871, 120, 'Public policy issues (e.g. electronic voting)'),
(872, 121, 'Making and evaluating ethical arguments'),
(873, 121, 'Identifying and evaluating ethical choices'),
(874, 121, 'Understanding the social context of design'),
(875, 121, 'Identifying assumptions and values'),
(876, 122, 'Community values and the laws by which we live'),
(877, 122, 'The nature of professionalism (including care, attention and discipline, fiduciary responsibility, and mentoring)'),
(878, 122, 'Keeping up-to-date as a professional (in terms of knowledge, tools, skills, legal and professional framework as'),
(879, 122, 'well as the ability to self-assess and computer fluency)'),
(880, 122, 'Various forms of professional credentialing and the advantages and disadvantages'),
(881, 122, 'The role of the professional in public policy'),
(882, 122, 'Maintaining awareness of consequences'),
(883, 122, 'Ethical dissent and whistle-blowing'),
(884, 122, 'Codes of ethics, conduct, and practice (IEEE, ACM, SE, AITP, and so forth)'),
(885, 122, 'Dealing with harassment and discrimination'),
(886, 122, '"Acceptable use" policies for computing in the workplacE'),
(887, 122, 'Healthy computing environment (ergonomics)'),
(888, 123, 'Historical examples of software risks (such as the Therac-case) Implications of software complexity'),
(889, 123, 'Risk assessment and risk management; risk removal, risk reduction and risk control'),
(890, 124, 'Physical security'),
(891, 124, 'Physical access controls'),
(892, 124, 'Personnel access controls'),
(893, 124, 'Operational security'),
(894, 124, 'Security policies for systems/networks'),
(895, 124, 'Recovery and response'),
(896, 124, 'Dealing with problems (both technical and human)'),
(897, 125, 'Foundations of intellectual property'),
(898, 125, 'Copyrights, patents, and trade secrets'),
(899, 125, 'Software piracy'),
(900, 125, 'Software patents'),
(901, 125, 'Transnational issues concerning intellectual property'),
(902, 126, 'Ethical and legal basis for privacy protection'),
(903, 126, 'Ethical and legal framework for freedom of information'),
(904, 126, 'Privacy implications of database systems (e.g. data gathering, storage, and sharing, massive data collecting,'),
(905, 126, 'computer surveillance systems)'),
(906, 126, 'Technological strategies for privacy protection'),
(907, 126, 'Freedom of expression in cyberspace'),
(908, 126, 'International and intercultural implications'),
(909, 127, 'History and examples of computer crime'),
(910, 127, '"Cracking" ("hacking") and its effects'),
(911, 127, 'Viruses, worms, and Trojan horses'),
(912, 127, 'Identity theft'),
(913, 127, 'Crime prevention strategies'),
(914, 128, 'Monopolies and their economic implications'),
(915, 128, 'Effect of skilled labor supply and demand on the quality of computing products'),
(916, 128, 'Pricing strategies in the computing domain'),
(917, 128, 'The phenomenon of outsourcing and offshoring; impacts on employment and on economics'),
(918, 128, 'Differences in access to computing resources and the possible effects thereof'),
(919, 128, 'Environmental sustainability'),
(920, 129, 'Philosophical frameworks, particularly utilitarianism and deontological theories'),
(921, 129, 'Problems of ethical relativism'),
(922, 129, 'Scientific ethics in historical perspective'),
(923, 129, 'Differences in scientific and philosophical approaches'),
(924, 130, 'Fundamental design concepts and principles'),
(925, 130, 'The role and the use of contracts'),
(926, 130, 'Design patterns'),
(927, 130, 'Software architecture'),
(928, 130, 'Structured design'),
(929, 130, 'Object-oriented analysis and design'),
(930, 130, 'Component-level design'),
(931, 130, 'Design qualities'),
(932, 130, 'Internal including low coupling, high cohesion, information hiding, efficiency'),
(933, 130, 'External including reliability, maintainability, usability, performance'),
(934, 130, 'Other approaches: data-structured centered, aspect oriented, function oriented, service oriented, agile'),
(935, 130, 'Design for reuse'),
(936, 130, 'Use of open-source materials'),
(937, 131, 'Programming using APIs'),
(938, 131, 'Design of APIs');
INSERT INTO `topics` (`id`, `unit_id`, `name`) VALUES
(939, 131, 'Class browsers and related tools'),
(940, 131, 'Debugging in the API environment Introduction to component-based computing'),
(941, 131, 'Introduction to Component-based Computing'),
(942, 132, 'Programming environments'),
(943, 132, 'Requirements analysis and design modeling tools'),
(944, 132, 'Testing tools including static and dynamic analysis tools'),
(945, 132, 'Tools for source control, and their use in particular in team-work'),
(946, 132, 'Configuration management and version control tools'),
(947, 132, 'Tool integration mechanisms'),
(948, 133, 'Software life-cycle and process models'),
(949, 133, 'Software process capability maturity models'),
(950, 133, 'Approaches to process improvement'),
(951, 133, 'Process assessment models'),
(952, 133, 'Software process measurements'),
(953, 134, 'Systems level considerations'),
(954, 134, 'Software requirements elicitation'),
(955, 134, 'Requirements analysis modeling techniques'),
(956, 134, 'Functional and non-functional requirements'),
(957, 134, 'Acceptability of certainty / uncertainty considerations regarding software / system behaviour'),
(958, 134, 'Prototyping'),
(959, 134, 'Basic concepts of formal specification techniques'),
(960, 135, 'Distinguishing between verification and validation'),
(961, 135, 'Static approaches and dynamic approaches'),
(962, 135, 'Validation planning; documentation for validation'),
(963, 135, 'Different kinds of testing – human computer interface, usability, reliability, security, conforman to specification'),
(964, 135, 'Testing fundamentals, including test plan creation and test case generation black-box and white-box testing techniques'),
(965, 135, 'Defect seeding'),
(966, 135, 'Unit, integration, validation, and system testing'),
(967, 135, 'Object-oriented testing; systems testing'),
(968, 135, 'Measurements: process, design, program'),
(969, 135, 'Verification and validation of non-code (documentation, help files, training materials)'),
(970, 135, 'Fault logging, fault tracking and technical support for such activities'),
(971, 135, 'Regression testing'),
(972, 135, 'Inspections, reviews, audits'),
(973, 136, 'Software maintenance'),
(974, 136, 'Characteristics of maintainable software'),
(975, 136, 'Reengineering Legacy systems'),
(976, 136, 'Refactoring'),
(977, 136, 'Software reuse'),
(978, 137, 'Team management: Team processes'),
(979, 137, 'Team management: Team organization and decision-making'),
(980, 137, 'Team management: Roles and responsibilities in a software team'),
(981, 137, 'Team management: Role identification and assignment'),
(982, 137, 'Team management: Project tracking'),
(983, 137, 'Team management: Team problem resolution'),
(984, 137, 'Project scheduling'),
(985, 137, 'Software measurement and estimation techniques'),
(986, 137, 'Risk analysis: The issue of security'),
(987, 137, 'Risk analysis: High integrity systems, safety critical systems'),
(988, 137, 'Risk analysis: The role of risk in the life cycle'),
(989, 137, 'Software quality assurance: The role of measurements'),
(990, 137, 'Software configuration management and version control; release management'),
(991, 137, 'Project management tools'),
(992, 137, 'Software process models and process measurements'),
(993, 138, 'Fundamentals: The definition and nature of components'),
(994, 138, 'Fundamentals: Components and interfaces'),
(995, 138, 'Fundamentals: Interfaces as contracts'),
(996, 138, 'Fundamentals: The benefits of components'),
(997, 138, 'Fundamentals: Basic techniques'),
(998, 138, 'Fundamentals: Component design and assembly'),
(999, 138, 'Fundamentals: Relationship with the client-server model and with patterns'),
(1000, 138, 'Fundamentals: Use of objects and object lifecycle services'),
(1001, 138, 'Fundamentals: Use of object brokers'),
(1002, 138, 'Fundamentals: Marshalling'),
(1003, 138, 'Applications (including the use of mobile components)'),
(1004, 138, 'Patterns as used in analysis and design; context of use including enterprise architectures'),
(1005, 138, 'Architecture of component-based systems'),
(1006, 138, 'Component-oriented design'),
(1007, 138, 'Application frameworks'),
(1008, 138, 'Event handling: detection, notification, and response'),
(1009, 138, 'Middleware: The object-oriented paradigm within middleware'),
(1010, 138, 'Middleware: Object request brokers'),
(1011, 138, 'Middleware: Transaction processing monitors'),
(1012, 138, 'Middleware: Workflow systems'),
(1013, 138, 'Middleware: State-of-the-art tools'),
(1014, 139, 'Formal methods concepts'),
(1015, 139, 'Formal specification languages'),
(1016, 139, 'Model checking'),
(1017, 139, 'Executable and non-executable specifications'),
(1018, 139, 'Pre and post assertions'),
(1019, 139, 'Formal verification'),
(1020, 139, 'Tools in support of formal methods'),
(1021, 140, 'Software reliability models'),
(1022, 140, 'Redundancy and fault tolerance'),
(1023, 140, 'Defect classification'),
(1024, 140, 'Probabilistic methods of analysis'),
(1025, 141, 'Real-time systems'),
(1026, 141, 'Client-server systems'),
(1027, 141, 'Distributed systems'),
(1028, 141, 'Parallel systems'),
(1029, 141, 'Web-based systems'),
(1030, 141, 'High-integrity systems'),
(1031, 142, 'Definition of terms: in security, vulnerability, threat, security breach; in safety, hazard.'),
(1032, 142, 'The concept of risk; hazard and risk identification'),
(1033, 142, 'Risk analysis including evaluation'),
(1034, 142, 'Need for a system-wide approach including hazards associated with tools'),
(1035, 142, 'Risk and immature technologies'),
(1036, 142, 'Cost/benefit analysis'),
(1037, 142, 'Principles of risk management'),
(1038, 143, 'Defensive programming: Principles of secure design and coding:'),
(1039, 143, 'Defensive programming: Principle of least privilege'),
(1040, 143, 'Defensive programming: Principle of fail-safe defaults'),
(1041, 143, 'Principle of psychological acceptability: How to detect potential security problems in programs'),
(1042, 143, 'Principle of psychological acceptability: Buffer and other types of overflows'),
(1043, 143, 'Principle of psychological acceptability: Race conditions'),
(1044, 143, 'Principle of psychological acceptability: Improper initialization, including choice of privileges'),
(1045, 143, 'Principle of psychological acceptability: Checking input'),
(1046, 143, 'Principle of psychological acceptability: Assuming success and correctness'),
(1047, 143, 'Principle of psychological acceptability: Validating assumptions'),
(1048, 143, 'How to document security considerations in using a program'),
(1049, 144, 'Definition of simulation and modeling; relationship between simulation and modeling'),
(1050, 144, 'Purpose including benefits and limitations: role - addressing performance, optimization; supporting decision making, forecasting, safety considerations; for training and education'),
(1051, 144, 'Important application areas: healthcare (including assisting with diagnostics); economics and finance; classroom of the future; training and education; city and urban simulations; simulation in science and in engineering; games; military simulation'),
(1052, 144, 'Different kinds of simulations - physical, human in the loop, interaction, computer, virtual reality'),
(1053, 144, 'The simulation process - sound basis, identification of key characteristics or behaviors, simplifying assumptions; validation of outcomes. Model building: use of mathematical formula or equation, graphs, constraints. Methodologies and techniques. Use of time stepping for dynamic systems.'),
(1054, 144, 'Theoretical considerations; Monte Carlo methods, stochastic processes, queuing theory'),
(1055, 144, 'Technologies in support of simulation and modeling: graphics processors; Haptic feedback devices. Human computer interaction considerations.'),
(1056, 144, 'Assessing and evaluating simulations in a variety of contexts.'),
(1057, 144, 'Software in support of simulation and modeling; packages, languages'),
(1058, 145, 'Linear programming: Integer programming'),
(1059, 145, 'Linear programming: The Simplex method'),
(1060, 145, 'Probabilistic modeling'),
(1061, 145, 'Queuing theory: Petri nets'),
(1062, 145, 'Queuing theory: Markov models and chains'),
(1063, 145, 'Optimization'),
(1064, 145, 'Network analysis and routing algorithms'),
(1065, 145, 'Prediction and estimation: Decision analysis'),
(1066, 145, 'Prediction and estimation: Forecasting'),
(1067, 145, 'Prediction and estimation: Risk management'),
(1068, 145, 'Prediction and estimation: Econometrics, microeconomics'),
(1069, 145, 'Prediction and estimation: Sensitivity analysis'),
(1070, 145, 'Dynamic programming'),
(1071, 145, 'Sample applications'),
(1072, 145, 'Software tools'),
(1073, 146, 'Overview of topics'),
(1074, 146, 'Models of computation'),
(1075, 146, 'Kinds of computation'),
(1076, 146, 'Task parallelism'),
(1077, 146, 'Data parallelism'),
(1078, 146, 'Event parallelism'),
(1079, 146, 'Properties of computation'),
(1080, 146, 'Bandwidth'),
(1081, 146, 'Latency'),
(1082, 146, 'Scalability'),
(1083, 146, 'Granularity'),
(1084, 146, 'Parallel architectures'),
(1085, 146, 'Processor architectures including multi-core'),
(1086, 146, 'Memory systems for high performance'),
(1087, 146, 'Caching and coherence'),
(1088, 146, 'Clusters'),
(1089, 146, 'Parallel programming paradigms'),
(1090, 146, 'Threading'),
(1091, 146, 'Message passing'),
(1092, 146, 'Event driven techniques'),
(1093, 146, 'Parallel software architectures: MapReduce'),
(1094, 146, 'Grid computing'),
(1095, 146, 'Open community distributed computing (BOINC, SETI, ...)');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `types`
--

CREATE TABLE IF NOT EXISTS `types` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;

--
-- Volcado de datos para la tabla `types`
--

INSERT INTO `types` (`id`, `name`) VALUES
(1, 'Obligatorio'),
(2, 'Electivo');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `units`
--

CREATE TABLE IF NOT EXISTS `units` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL,
  `subject_id` int(11) NOT NULL,
  `hours` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=147 ;

--
-- Volcado de datos para la tabla `units`
--

INSERT INTO `units` (`id`, `name`, `subject_id`, `hours`) VALUES
(1, 'FunctionsRelationsAndSets', 1, 6),
(2, 'BasicLogic', 1, 10),
(3, 'ProofTechniques', 1, 12),
(4, 'BasicsOfCounting', 1, 5),
(5, 'GraphsAndTrees', 1, 4),
(6, 'DiscreteProbability', 1, 6),
(7, 'FundamentalConstructs', 3, 9),
(8, 'AlgorithmicProblemSolving', 3, 6),
(9, 'DataStructures', 3, 10),
(10, 'Recursion', 3, 4),
(11, 'EventDrivenProgramming', 3, 4),
(12, 'ObjectOriented', 3, 8),
(13, 'FoundationsInformationSecurity', 3, 4),
(14, 'SecureProgramming', 3, 2),
(15, 'BasicAnalysis', 5, 4),
(16, 'AlgorithmicStrategies', 5, 6),
(17, 'FundamentalAlgorithms', 5, 12),
(18, 'DistributedAlgorithms', 5, 3),
(19, 'BasicComputability', 5, 6),
(20, 'PversusNP', 5, 0),
(21, 'AutomataTheory', 5, 0),
(22, 'AdvancedAnalysis', 5, 0),
(23, 'CryptographicAlgorithms', 5, 0),
(24, 'GeometricAlgorithms', 5, 0),
(25, 'ParallelAlgorithms', 5, 0),
(26, 'DigitalLogicAndDataRepresentation', 7, 7),
(27, 'ComputerArchitectureAndOrganization', 7, 9),
(28, 'InterfacingAndI/OStrategies', 7, 3),
(29, 'MemoryArchitecture', 7, 5),
(30, 'FunctionalOrganization', 7, 6),
(31, 'Multiprocessing', 7, 6),
(32, 'PerformanceEnhancements', 7, 0),
(33, 'DistributedArchitectures', 7, 0),
(34, 'Devices', 7, 0),
(35, 'DirectionsInComputing', 7, 0),
(36, 'OverviewOfOperatingSystems', 9, 2),
(37, 'OperatingSystemPrinciples', 9, 2),
(38, 'Concurrency', 9, 6),
(39, 'SchedulingandDispatch', 9, 3),
(40, 'MemoryManagement', 9, 3),
(41, 'SecurityAndProtection', 9, 2),
(42, 'DeviceManagement', 9, 0),
(43, 'FileSystems', 9, 0),
(44, 'RealTimeAndEmbeddedSystems', 9, 0),
(45, 'FaultTolerance', 9, 0),
(46, 'SystemPerformanceEvaluation', 9, 0),
(47, 'Scripting', 9, 0),
(48, 'DigitalForensics', 9, 0),
(49, 'SecurityModels', 9, 0),
(50, 'Introduction', 11, 2),
(51, 'NetworkCommunication', 11, 7),
(52, 'NetworkSecurity', 11, 6),
(53, 'WebOrganization', 11, 0),
(54, 'NetworkedApplications', 11, 0),
(55, 'NetworkManagement', 11, 0),
(56, 'Compression', 11, 0),
(57, 'MultimediaTechnologies', 11, 0),
(58, 'MobileComputing', 11, 0),
(59, 'Overview', 13, 2),
(60, 'VirtualMachines', 13, 1),
(61, 'BasicLanguageTranslation', 13, 2),
(62, 'DeclarationsAndTypes', 13, 3),
(63, 'AbstractionMechanisms', 13, 3),
(64, 'ObjectOrientedProgramming', 13, 10),
(65, 'FunctionalProgramming', 13, 0),
(66, 'LanguageTranslationSystems', 13, 0),
(67, 'TypeSystems', 13, 0),
(68, 'ProgrammingLanguageSemantics', 13, 0),
(69, 'ProgrammingLanguageDesign', 13, 0),
(70, 'Foundations', 2, 6),
(71, 'BuildingGUIInterfaces', 2, 2),
(72, 'UserCcenteredSoftwareEvaluation', 2, 0),
(73, 'UserCenteredSoftwareDevelopment', 2, 0),
(74, 'GUIDesign', 2, 0),
(75, 'GUIProgramming', 2, 0),
(76, 'MultimediaAndMultimodalSystems', 2, 0),
(77, 'CollaborationAndCommunication', 2, 0),
(78, 'InteractionDesignForNewEnvironments', 2, 0),
(79, 'HumanFactorsAndSecurity', 2, 0),
(80, 'FundamentalTechniques', 4, 2),
(81, 'GraphicSystems', 4, 1),
(82, 'GraphicCommunication', 4, 0),
(83, 'GeometricModeling', 4, 0),
(84, 'BasicRendering', 4, 0),
(85, 'AdvancedRendering', 4, 0),
(86, 'AdvancedTechniques', 4, 0),
(87, 'ComputerAnimation', 4, 0),
(88, 'Visualization', 4, 0),
(89, 'VirtualReality', 4, 0),
(90, 'ComputerVision', 4, 0),
(91, 'ComputationalGeometry', 4, 0),
(92, 'GameEngineProgramming', 4, 0),
(93, 'FundamentalIssues', 6, 1),
(94, 'BasicSearchStrategies', 6, 5),
(95, 'KnowledgeBasedReasoning', 6, 4),
(96, 'AdvancedSearch', 6, 0),
(97, 'AdvancedReasoning', 6, 0),
(98, 'Agents', 6, 0),
(99, 'NaturaLanguageProcessing', 6, 0),
(100, 'MachineLearning', 6, 0),
(101, 'PlanningSystems', 6, 0),
(102, 'Robotics', 6, 0),
(103, 'Perception', 6, 0),
(104, 'InformationModels', 8, 4),
(105, 'DatabaseSystems', 8, 3),
(106, 'DataModeling', 8, 4),
(107, 'Indexing', 8, 0),
(108, 'RelationalDatabases', 8, 0),
(109, 'QueryLanguages', 8, 0),
(110, 'RelationalDatabaseDesign', 8, 0),
(111, 'TransactionProcessing', 8, 0),
(112, 'DistributedDatabases', 8, 0),
(113, 'PhysicalDatabaseDesign', 8, 0),
(114, 'DataMining', 8, 0),
(115, 'InformationStorageAndRetrieval', 8, 0),
(116, 'Hypermedia', 8, 0),
(117, 'MultimediaSystems', 8, 0),
(118, 'DigitalLibraries', 8, 0),
(119, 'HistoryOfComputing', 10, 1),
(120, 'SocialContext', 10, 3),
(121, 'AnalyticalTools', 10, 2),
(122, 'ProfessionalEthics', 10, 3),
(123, 'Risks', 10, 2),
(124, 'IntellectualProperty', 10, 3),
(125, 'PrivacyAndCivilLiberties', 10, 2),
(126, 'SecurityOperations', 10, 0),
(127, 'ComputerCrime', 10, 0),
(128, 'EconomicsOfComputing', 10, 0),
(129, 'PhilosophicalFrameworks', 10, 0),
(130, 'SoftwareDesign', 12, 8),
(131, 'UsingAPIs', 12, 5),
(132, 'ToolsAndEnvironments', 12, 3),
(133, 'SoftwareProcesses', 12, 2),
(134, 'RequirementsSpecifications', 12, 4),
(135, 'SoftwareVerificationValidation', 12, 3),
(136, 'SoftwareEvolution', 12, 3),
(137, 'SoftwareProjectManagement', 12, 3),
(138, 'ComponentBasedComputing', 12, 0),
(139, 'FormalMethods', 12, 0),
(140, 'SoftwareReliability', 12, 0),
(141, 'SpecializedSystems', 12, 0),
(142, 'RiskAssessment', 12, 0),
(143, 'RobustAndSecurity-EnhancedProgramming', 12, 0),
(144, 'ModelingAndSimulation', 14, 0),
(145, 'OperationsResearch', 14, 0),
(146, 'ParallelComputation', 14, 0);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `password` varchar(50) DEFAULT NULL,
  `display_name` varchar(250) NOT NULL,
  `role` varchar(20) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8 ;

--
-- Volcado de datos para la tabla `users`
--

INSERT INTO `users` (`id`, `username`, `password`, `display_name`, `role`, `created`, `modified`) VALUES
(1, 'gmendez', 'e7cbdfdcadcbfb9b791a8f55a3e0cef97bc5025b', 'Gonzalo Gabriel Méndez', 'admin', '2013-02-07 20:55:17', '2013-02-07 20:55:17'),
(3, 'user1', '938b5dc4fa28ca25f4deacc9183af4d829eab7c3', 'Diana Jaramillo', 'author', '2013-02-07 21:07:03', '2013-02-07 21:07:03'),
(4, 'user2', 'cb3b0f2964d0609f3e48883812b3553a104c7e43', 'Daniel Méndez Cobeña', 'admin', '2013-02-07 21:10:07', '2013-02-07 21:10:07'),
(5, 'admin', 'b72cebf51055ecf6c8ceb702b797ffa76273fe82', '', 'admin', '2013-02-08 19:00:34', '2013-02-08 19:00:34'),
(6, 'Pepe MÃ©ndez', '39e8c30bc12f4a495fa169094eb01232b569b763', '', 'admin', '2013-02-12 01:13:34', '2013-02-12 01:13:34'),
(7, 'ernesto', '1504a6ba656faee2f31fa57fd97ab7dde0e00f85', 'Ernesto Cuadros-Vargas', 'author', '2013-02-28 16:44:46', '2013-02-28 16:44:46');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
